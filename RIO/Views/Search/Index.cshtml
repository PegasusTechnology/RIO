@model RIO.Models.SearchViewModel

@{
    ViewBag.Title = "RIO - Search Item";
}

<h2>Search Item</h2>

<form method="get">
    @Html.DropDownList("category", new SelectList(Model.Categories, "CategoryId", "CategoryName", @Request.QueryString["category"]), "All Categories")
    <input type="text" name="itemName" value="@Request.QueryString["itemName"]" />
    <input type="submit" value="Search" />
    @Html.ActionLink("Advanced Search", "Index")
</form>

<br />

@if (Model.Items.Count() != 0)
{
    <h3>Matching Items</h3>
    
    <div class="row">
        @foreach (var item in Model.Items)
        {
            <div class="col-md-3 col-sm-6">
                @Html.ActionLink(item.ItemName, "Details", new { id = item.ItemId });               
                @Html.DisplayFor(modelItem => item.Category.CategoryName)
                @Html.DisplayFor(modelItem => item.Brand.BrandName)
                @Html.DisplayFor(modelItem => item.Address.City.State.Country.CountryName)
                @Html.DisplayFor(modelItem => item.Address.City.State.StateName)
                @Html.DisplayFor(modelItem => item.Address.City.CityName)
                @Html.DisplayFor(modelItem => item.PostedDate)
            </div>    
        }
    </div>
}

else if (!string.IsNullOrEmpty(@Request.QueryString["itemName"]))
{
    <h3>Sorry, No Matching Items</h3>
}

